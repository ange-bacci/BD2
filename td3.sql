-- Q1

SELECT DISTINCT NOM_PROF, ANNEE, COUNT(DISTINCT ETUDIANT.NUM_ET) FROM ENSEIGNT
JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
JOIN ETUDIANT ON ETUDIANT.NUM_ET = ENSEIGNT.NUM_ET
GROUP BY NOM_PROF, ANNEE;

-- Q2

SELECT DISTINCT ENSEIGNT.NUM_PROF, NOM_PROF, COUNT(DISTINCT CODE) FROM ENSEIGNT
JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
WHERE ENSEIGNT.NUM_PROF IN (
    SELECT DISTINCT RESP FROM MODULE
    WHERE RESP IS NOT NULL
)
GROUP BY ENSEIGNT.NUM_PROF, NOM_PROF;

SELECT DISTINCT ENSEIGNT.NUM_PROF, NOM_PROF, COUNT(DISTINCT CODE) FROM ENSEIGNT, PROF
WHERE PROF.NUM_PROF = ENSEIGNT.NUM_PROF
AND ENSEIGNT.NUM_PROF IN (
    SELECT DISTINCT RESP FROM MODULE
    WHERE RESP IS NOT NULL
)
GROUP BY ENSEIGNT.NUM_PROF, NOM_PROF;

-- Q3

SELECT GROUPE, ROUND(AVG(MOY_TEST), 2) FROM NOTATION
JOIN ETUDIANT ON ETUDIANT.NUM_ET = NOTATION.NUM_ET
WHERE CODE = (
    SELECT CODE FROM MODULE
    WHERE LIBELLE = 'CONCEPTION DE SI'
)
AND ANNEE = 2
GROUP BY GROUPE;

-- Q4

SELECT NOM_PROF, PRENOM_PROF FROM ENSEIGNT
JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
WHERE NOM_PROF != 'FAURE' AND PRENOM_PROF != 'BERNARD'
GROUP BY NOM_PROF, PRENOM_PROF, ENSEIGNT.NUM_PROF HAVING COUNT(DISTINCT ENSEIGNT.CODE) = (
    SELECT COUNT(DISTINCT CODE) FROM ENSEIGNT
    JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
    WHERE PROF.NOM_PROF = 'FAURE' AND PROF.PRENOM_PROF = 'BERNARD'
);

-- Q5

-- MAUVAIS /!\
SELECT AVG(COUNT(NUM_ET)) EFFECTIF_MOYEN FROM ETUDIANT
WHERE ANNEE = 2
GROUP BY GROUPE;
-- MAUVAIS /!\

SELECT AVG(EFFECTIF)
FROM (
    SELECT COUNT(*) EFFECTIF FROM ETUDIANT
    WHERE ANNEE = 2
    GROUP BY GROUPE
);

-- Q6

SELECT MAX(COUNT(NUM_ET)) PG_NB_ET FROM ENSEIGNT
GROUP BY NUM_PROF;

-- Q7

SELECT CODE, LIBELLE, ROUND(H_COURS_PREV/(
    SELECT SUM(H_COURS_PREV) FROM MODULE
), 3) SOMME
FROM MODULE
WHERE H_COURS_PREV IS NOT NULL
GROUP BY CODE, LIBELLE, H_COURS_PREV;

-- Q8

SELECT DISTINCT ENSEIGNT.CODE, COUNT(DISTINCT ENSEIGNT.NUM_PROF), MAXIMUM
FROM ENSEIGNT, (
    SELECT CODE, MAX(MOY_TEST) MAXIMUM FROM NOTATION
    GROUP BY CODE
) R
WHERE R.CODE = ENSEIGNT.CODE
GROUP BY ENSEIGNT.CODE, MAXIMUM;

-- Q9

SELECT CODE, LIBELLE FROM MODULE
WHERE CODEPERE IS NULL;

-- Q10

SELECT LIBELLE, LEVEL FROM MODULE
CONNECT BY PRIOR CODE = CODEPERE
START WITH CODE = 'PINFO2'
ORDER BY LEVEL;

-- Q11

SELECT LIBELLE, LEVEL FROM MODULE
WHERE LEVEL = 2
CONNECT BY PRIOR CODE = CODEPERE
START WITH LIBELLE = 'OUTILS MODELES GENIE LOGICIEL'
ORDER BY LEVEL;

-- Q12

SELECT LIBELLE, LEVEL FROM MODULE
CONNECT BY CODE = PRIOR CODEPERE
START WITH LIBELLE = 'BASES DE DONNEES'
ORDER BY LEVEL;

-- Q13

SELECT LIBELLE FROM MODULE
WHERE CODE != 'BD'
CONNECT BY PRIOR CODE = CODEPERE
START WITH CODE = 'PINFO2';

-- Q14

SELECT DISTINCT NOM_PROF, PRENOM_PROF FROM ENSEIGNT
JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
WHERE NOT EXISTS (
    SELECT NUM_ET FROM ETUDIANT
    WHERE ANNEE = 2 AND ETUDIANT.NUM_ET = ENSEIGNT.NUM_ET
);

SELECT NOM_PROF, PRENOM_PROF FROM ENSEIGNT
JOIN PROF ON PROF.NUM_PROF = ENSEIGNT.NUM_PROF
JOIN ETUDIANT ON ETUDIANT.NUM_ET = ENSEIGNT.NUM_ET
WHERE ANNEE = 2
GROUP BY NOM_PROF, PRENOM_PROF HAVING COUNT(DISTINCT ETUDIANT.NUM_ET) = (
    SELECT COUNT(*) FROM ETUDIANT
    WHERE ANNEE = 2
);

SELECT NOM_PROF, PRENOM_PROF FROM PROF
WHERE NOT EXISTS (
    SELECT * FROM ETUDIANT
    WHERE ANNEE = 2
    AND NOT EXISTS (
        SELECT * FROM ENSEIGNT
        WHERE ETUDIANT.NUM_ET = ENSEIGNT.NUM_ET
        AND PROF.NUM_PROF = ENSEIGNT.NUM_PROF
    )
);

